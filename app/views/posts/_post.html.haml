.card.border.border-0.shadow-sm.mb-3
  .card-body
    .row
      .col
        %p.fw-bold.text-body-secondary.mb-0= post.user.username.truncate(30)
      - if current_page?(post_path(post)) && user_can_edit?(post)
        .col-auto
          .dropdown
            %button.bi.bi-three-dots.fs-5.text-dark.button-trp.lh-1{ type: 'button', data: { 'bs-toggle': 'dropdown' }, 'aria-expanded': 'false' }
            %ul.dropdown-menu.dropdown-menu-end
              %li.dropdown-item= link_to t('global.change'), edit_post_path(post), class: 'text-decoration-none text-dark'
              %li.dropdown-item
                %button.button-trp.p-0{ data: { 'bs-toggle': 'modal', 'bs-target': "#delete_post_#{post.id}" } }= t('global.delete')
    %h4= link_to post.title, post_path(post), class: 'text-decoration-none text-dark'
    %p= simple_format h(post.body)
    - if post.picture.present?
      = image_tag url_for(post.picture.blob), class: 'img-fluid rounded mb-2'
    %turbo-frame{ id: "post_#{post.id}" }
      .row
        .col-auto
          = link_to post_path(post, anchor: 'comments'), data: { turbo: false }, class: 'text-decoration-none text-dark' do
            %i.bi.bi-chat.text-dark.me-2
            = post.comments.count
        .col-auto.d-flex
          - if user_signed_in?
            - if current_user.liked_posts.include?(post)
              = button_to '', post_post_likes_path(post), method: :delete, id: "post_likes_#{post.id}", class: 'button-trp bi bi-heart-fill text-danger me-2'
            - else
              = button_to '', post_post_likes_path(post), id: "post_likes_#{post.id}", class: 'button-trp bi bi-heart me-2'
          - else
            %i.bi.bi-heart.me-2
          = post.post_likes.count
- if current_page?(post_path(post)) && user_can_edit?(post)
  = render 'posts/delete_modal', post: post
